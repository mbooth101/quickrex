<?xml version="1.0" encoding="UTF-8"?>
<!--/*******************************************************************************
 * Copyright (c) 2005, 2007 Bastian Bergerhoff and others
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution.
 * 
 * Contributors:
 *     Bastian Bergerhoff - initial contents
 *******************************************************************************/-->
<completions>
  <proposal key="\\" value="\\" allowPlain="true" displayString="Backslash" additionalInfo="\\">
    <retrigger re=".*[^\\]\\$" completion="\"/>
    <retrigger re=".*\A\\$" completion="\"/>
  </proposal>
  <proposal key="\x" value="\x" allowPlain="true" displayString="Hex character code" additionalInfo="\x - \xhh is equivalent to 0xhh">
    <retrigger re=".*[^\\]\\$" completion="x"/>
    <retrigger re=".*\A\\$" completion="x"/>
  </proposal>
  <proposal key="\u" value="\u" allowPlain="true" displayString="Hex code of double-byte character" additionalInfo="\u - \uhhhh is equivalent to 0xhhhh">
    <retrigger re=".*[^\\]\\$" completion="u"/>
    <retrigger re=".*\A\\$" completion="u"/>
  </proposal>
  <proposal key="\t" value="\t" allowPlain="true" displayString="Tab" additionalInfo="\t - \u0009">
    <retrigger re=".*[^\\]\\$" completion="t"/>
    <retrigger re=".*\A\\$" completion="t"/>
  </proposal>
  <proposal key="\n" value="\n" allowPlain="true" displayString="Newline (line-feed)" additionalInfo="\n - \u000A">
    <retrigger re=".*[^\\]\\$" completion="n"/>
    <retrigger re=".*\A\\$" completion="n"/>
  </proposal>
  <proposal key="\r" value="\r" allowPlain="true" displayString="Carriage Return (CR)" additionalInfo="\r - \u000D">
    <retrigger re=".*[^\\]\\$" completion="r"/>
    <retrigger re=".*\A\\$" completion="r"/>
  </proposal>
  <proposal key="\f" value="\f" allowPlain="true" displayString="Form Feed (FF)" additionalInfo="\f - \u000C">
    <retrigger re=".*[^\\]\\$" completion="f"/>
    <retrigger re=".*\A\\$" completion="f"/>
  </proposal>
  <proposal key="." value="." allowPlain="true" displayString="Any character" additionalInfo=". - may or may not match line terminators depending &#x000A;on flags (you can set DOTALL mode using ?s)">
  </proposal>
  <proposal key="\d" value="\d" allowPlain="true" displayString="A digit" additionalInfo="\d - [0-9], i.e. any of 0,1,2,3,4,5,6,7,8 or 9">
    <retrigger re=".*[^\\]\\$" completion="d"/>
    <retrigger re=".*\A\\$" completion="d"/>
  </proposal>
  <proposal key="\D" value="\D" allowPlain="true" displayString="Not a digit" additionalInfo="\D - [^0-9], i.e. none of 0,1,2,3,4,5,6,7,8 or 9">
    <retrigger re=".*[^\\]\\$" completion="D"/>
    <retrigger re=".*\A\\$" completion="D"/>
  </proposal>
  <proposal key="\s" value="\s" allowPlain="true" displayString="A whitespace" additionalInfo="\s - [ \t\n\x0B\f\r]">
    <retrigger re=".*[^\\]\\$" completion="s"/>
    <retrigger re=".*\A\\$" completion="s"/>
  </proposal>
  <proposal key="\S" value="\S" allowPlain="true" displayString="Not a whitespace" additionalInfo="\S - [^\s]">
    <retrigger re=".*[^\\]\\$" completion="S"/>
    <retrigger re=".*\A\\$" completion="S"/>
  </proposal>
  <proposal key="\w" value="\w" allowPlain="true" displayString="Alphanumeric" additionalInfo="\w - [a-zA-Z_0-9], i.e. a standard character, an underscore &#x000A;or a digit">
    <retrigger re=".*[^\\]\\$" completion="w"/>
    <retrigger re=".*\A\\$" completion="w"/>
  </proposal>
  <proposal key="\W" value="\W" allowPlain="true" displayString="Not an alphanumeric" additionalInfo="\W - [^a-zA-Z_0-9]">
    <retrigger re=".*[^\\]\\$" completion="W"/>
    <retrigger re=".*\A\\$" completion="W"/>
  </proposal>
  <proposal key="^" value="^" allowPlain="true" displayString="Line start" additionalInfo="^ - The beginning of a line">
  </proposal> 
  <proposal key="$" value="$" allowPlain="true" displayString="Line end" additionalInfo="$ - The end of a line">
  </proposal>
  <proposal key="\b" value="\b" allowPlain="true" displayString="Word beginning or end" additionalInfo="\b - The beginning of a Word (a region consisting of &#x000A;Word-characters, [a-zA-Z_0-9])">
    <retrigger re=".*[^\\]\\$" completion="b"/>
    <retrigger re=".*\A\\$" completion="b"/> 
  </proposal>
  <proposal key="\B" value="\B" allowPlain="true" displayString="Not a word beginning or end" additionalInfo="\B - Neither the beginning nor the end of a Word (a region &#x000A;consisting of Word-characters, [a-zA-Z_0-9])">
    <retrigger re=".*[^\\]\\$" completion="B"/>
    <retrigger re=".*\A\\$" completion="B"/> 
  </proposal>
  <proposal key="?" value="?" allowPlain="false" displayString="Greedy match 0 or 1 times" additionalInfo="? - match the preceeding expression 0 or 1 times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="?"/>
    <retrigger re=".*\\\\$" completion="?"/>
  </proposal> 
  <proposal key="*" value="*" allowPlain="false" displayString="Greedy match 0 or more times" additionalInfo="* - match the preceeding expression 0 or more times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="*"/>
    <retrigger re=".*\\\\$" completion="*"/>
  </proposal> 
  <proposal key="+" value="+" allowPlain="false" displayString="Greedy match 1 or more times" additionalInfo="+ - match the preceeding expression 1 or more times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="+"/> 
    <retrigger re=".*\\\\$" completion="+"/>
  </proposal> 
  <proposal key="{n}" value="{}" allowPlain="false" displayString="Greedy match exactly n times" additionalInfo="{n} - match the preceeding expression exactly n times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="{}"/> 
    <retrigger re=".*\\\\$" completion="{}"/> 
    <retrigger re=".*\{\d*$" completion="}"/> 
  </proposal> 
  <proposal key="{n,}" value="{,}" allowPlain="false" displayString="Greedy match >= n times" additionalInfo="{n,} - match the preceeding expression at least n times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="{,}"/> 
    <retrigger re=".*\\\\$" completion="{,}"/> 
    <retrigger re=".*\{\d*$" completion=",}"/>  
    <retrigger re=".*\{\d*,$" completion="}"/>  
  </proposal> 
  <proposal key="{n,m}" value="{,}" allowPlain="false" displayString="Greedy match >= n times but &lt;= m times" additionalInfo="{n,m} - match the preceeding expression at least n and at most m times. &#x000A;&#x000A;Greedy: reads the whole input, tries to match &#x000A;and then (repeatedly) backs off by one character &#x000A;and tries again.">
    <retrigger re=".*[^\\]$" completion="{,}"/> 
    <retrigger re=".*\\\\$" completion="{,}"/> 
    <retrigger re=".*\{\d*$" completion=",}"/> 
    <retrigger re=".*\{\d*,\d*$" completion="}"/>  
  </proposal> 
  <proposal key="??" value="??" allowPlain="false" displayString="Match 0 or 1 times (left to right)" additionalInfo="?? - match the preceeding expression 0 or 1 times. &#x000A;&#x000A;Reluctant: reads the first character of the input, &#x000A;tries to match and then (repeatedly) reads one &#x000A;additional character and tries again.">
    <retrigger re=".*[^\?\\]$" completion="??"/>
    <retrigger re=".*\\\\$" completion="??"/>
    <retrigger re=".*[^\?]\?$" completion="?"/>
  </proposal> 
  <proposal key="*?" value="*?" allowPlain="false" displayString="Match 0 or more times (left to right)" additionalInfo="*? - match the preceeding expression 0 or more times. &#x000A;&#x000A;Reluctant: reads the first character of the input, &#x000A;tries to match and then (repeatedly) reads one &#x000A;additional character and tries again.">
    <retrigger re=".*[^\*\\]$" completion="*?"/>
    <retrigger re=".*\\\\$" completion="*?"/>
    <retrigger re=".+\*$" completion="?"/>
  </proposal> 
  <proposal key="+?" value="+?" allowPlain="false" displayString="Match 1 or more times (left to right)" additionalInfo="+? - match the preceeding expression 1 or more times. &#x000A;&#x000A;Reluctant: reads the first character of the input, &#x000A;tries to match and then (repeatedly) reads one &#x000A;additional character and tries again.">
    <retrigger re=".*[^\+\\]$" completion="+?"/>
    <retrigger re=".*\\\\$" completion="+?"/>
    <retrigger re=".+\+$" completion="?"/> 
  </proposal> 
  <proposal key="U|V" value="|" allowPlain="true" displayString="U or V" additionalInfo="U|V - either the expresion to the left or the expression to the right of the bar.">
  </proposal>
  <proposal key="(U)" value="()" allowPlain="true" displayString="Mark U as capturing group" additionalInfo="(U)">
    <retrigger re=".*\(.*$" completion=")"/> 
  </proposal> 
  <proposal key="\" value="\" allowPlain="true" displayString="Quote next character" additionalInfo="\ - Escape for special characters (e.g. \\ matches a Backslash)">
  </proposal> 
  <proposal key="[ecq]" value="[]" allowPlain="true" displayString="Character set" additionalInfo="Example: [ecq] - e, c or q">
    <retrigger re=".*\[(.*)$" completion="]"/>
  </proposal>
  <proposal key="[^ecq]" value="[^]" allowPlain="true" displayString="Excluded character set" additionalInfo="Example: [^ecq] - neither e nor c nor q">
    <retrigger re=".*\[(.*)$" completion="^]"/>
    <retrigger re=".*\[\^(.*)$" completion="]"/>
  </proposal>
  <proposal key="[e-q]" value="[-]" allowPlain="true" displayString="Character range" additionalInfo="Example: [e-q] - either character in the ASCII-range between e and q (inclusive)">
    <retrigger re=".*\[(.+)$" completion="-]"/>
    <retrigger re=".*\[(.*-.*)$" completion="]"/>
  </proposal>
  <proposal key="[:alnum:]" value="[:alnum:]" allowPlain="true" displayString="Alphanumeric (US-ASCII)" additionalInfo="[:alnum:] -  (US-ASCII) [a-zA-Z0-9]">
    <wordtrigger word="[:alnum:" completion="]"/>
  </proposal>
  <proposal key="[:alpha:]" value="[:alpha:]" allowPlain="true" displayString="Alphabetic (US-ASCII)" additionalInfo="[:alpha:] - (US-ASCII) alphabetic, [a-zA-Z]">
    <wordtrigger word="[:alpha:" completion="]"/>
  </proposal>
  <proposal key="[:blank:]" value="[:blank:]" allowPlain="true" displayString="Space or Tab (US-ASCII)" additionalInfo="[:blank:] - (US-ASCII) [ \t]">
    <wordtrigger word="[:blank:" completion="]"/>
  </proposal>
  <proposal key="[:cntrl:]" value="[:cntrl:]" allowPlain="true" displayString="Control (US-ASCII)" additionalInfo="[:cntrl:] - (US-ASCII) [\x00-\x1F\x7F]">
    <wordtrigger word="[:cntrl:" completion="]"/>
  </proposal>
  <proposal key="[:digit:]" value="[:digit:]" allowPlain="true" displayString="Digit (US-ASCII)" additionalInfo="[:digit:] -  (US-ASCII) [0-9]">
    <wordtrigger word="[:digit:" completion="]"/>
  </proposal>
  <proposal key="[:graph:]" value="[:graph:]" allowPlain="true" displayString="Visible (US-ASCII)" additionalInfo="[:graph:] - (US-ASCII) Alphanumeric or Punctuation">
    <wordtrigger word="[:graph:" completion="]"/>
  </proposal>
  <proposal key="[:lower:]" value="[:lower:]" allowPlain="true" displayString="Lower-case alphabetic (US-ASCII)" additionalInfo="[:lower:] - (US-ASCII) lower-case alphabetic, [a-z]">
    <wordtrigger word="[:lower:" completion="]"/>
  </proposal>
  <proposal key="[:print:]" value="[:print:]" allowPlain="true" displayString="Printable (US-ASCII)" additionalInfo="[:print:] - (US-ASCII) Alphanumeric or Punctuation">
    <wordtrigger word="[:print:" completion="]"/>
  </proposal>
  <proposal key="[:punct:]" value="[:punct:]" allowPlain="true" displayString="Punctuation (US-ASCII)" additionalInfo="[:punct:] -  (US-ASCII) one of !&quot;#$%&amp;'()*+,-./:;&lt;=>?@[\]^_`{|}~">
    <wordtrigger word="[:punct:" completion="]"/>
  </proposal>
  <proposal key="[:space:]" value="[:space:]" allowPlain="true" displayString="Whitespace" additionalInfo="[:space:] - [ \t\n\x0B\f\r]">
    <wordtrigger word="[:space:" completion="]"/>
  </proposal>
  <proposal key="[:upper:]" value="[:upper:]" allowPlain="true" displayString="Upper-case alphabetic (US-ASCII)" additionalInfo="[:upper:] - (US-ASCII) upper-case alphabetic, [A-Z]">
    <wordtrigger word="[:upper:" completion="]"/>
  </proposal>
  <proposal key="[:xdigit:]" value="[:xdigit:]" allowPlain="true" displayString="Hexadecimal Digit" additionalInfo="[:xdigit:] - [0-9a-fA-F]">
    <wordtrigger word="[:xdigit:" completion="]"/>
  </proposal>
  <proposal key="[:javastart:]" value="[:javastart:]" allowPlain="true" displayString="Start of a Java identifier" additionalInfo="[:javastart:] - Start of a legal Java identifier">
    <wordtrigger word="[:javastart:" completion="]"/>
  </proposal>
  <proposal key="[:javapart:]" value="[:javapart:]" allowPlain="true" displayString="Part of a Java identifier" additionalInfo="[:javapart:] - Part of a legal Java identifier">
    <wordtrigger word="[:javapart:" completion="]"/>
  </proposal>
</completions>
